syntax = "proto3";

package complex;

option java_package = "com.example.complex";
option java_outer_classname = "ComplexProto";
option optimize_for = SPEED;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";

// Custom field option
extend google.protobuf.FieldOptions {
  string validation = 50000;
}

// Enum with options and aliases
enum Status {
  option allow_alias = true;
  UNKNOWN = 0;
  STARTED = 1;
  IN_PROGRESS = 1;
  COMPLETED = 2;
  FAILED = 3;
}

// Message with nested messages, oneof, map, reserved fields, and extensions
message ComplexMessage {
  // Reserved fields and names
  reserved 2, 15, 9 to 11;
  reserved "old_field", "unused_field";

  // Nested message
  message NestedMessage {
    int32 id = 1;
    string description = 2;
    repeated NestedChildMessage children = 3;

    // Nested nested message
    message NestedChildMessage {
      int32 id = 1;
      string info = 2;
    }
  }

  // Map field
  map<string, NestedMessage> nested_map = 1;

  // Oneof field
  oneof test_oneof {
    string name = 3;
    int32 number = 4;
  }

  // Repeated field with custom option
  repeated Status status_history = 5 [(validation) = "must be non-empty"];

  // Fields using imported types
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Duration duration = 7;
  google.protobuf.Any any_field = 8;

  // Extension range
  repeated ExtensionMessage extensions = 99;
}

// Service definition with multiple RPC methods
service ComplexService {
  rpc GetComplexMessage(ComplexRequest) returns (ComplexResponse) {
    option (google.api.http) = {
      get: "/v1/complex/{id}"
    };
  }

  rpc StreamComplexMessages(ComplexStreamRequest) returns (stream ComplexMessage);

  rpc UpdateComplexMessage(stream ComplexMessage) returns (ComplexResponse);
}

// Message with extensions
message ExtensionMessage {
  int32 extension_id = 1;
}

// Request and response messages
message ComplexRequest {
  int32 id = 1;
}

message ComplexResponse {
  ComplexMessage message = 1;
}

// Stream request message
message ComplexStreamRequest {
  repeated int32 ids = 1;
}

// Custom option definitions
message MethodOptions {
  string option_name = 1;
}

extend google.protobuf.MethodOptions {
  MethodOptions method_option = 50001;
}

// Usage of custom options in service
service AnotherService {
  rpc CustomMethod(CustomRequest) returns (CustomResponse) {
    option (method_option).option_name = "custom_value";
  }
}

message CustomRequest {
  string request_data = 1;
}

message CustomResponse {
  string response_data = 1;
}

// Include deprecated fields
message DeprecatedFields {
  int32 old_field = 1 [deprecated = true];
}

// Message with default values (note: default values are implicit in proto3)
message DefaultValues {
  int32 number = 1;
  string text = 2;
  bool flag = 3;
}

// Use of reserved ranges in enums
enum ExtendedStatus {
  option allow_alias = true;
  UNKNOWN = 0;
  STARTED = 1;
  IN_PROGRESS = 1;
  COMPLETED = 2;
  FAILED = 3;
  reserved 4 to 10;
  PENDING = 11;
}

// Use of packed repeated fields
message PackedRepeatedFields {
  repeated int32 numbers = 1 [packed = true];
}

// Using proto2 syntax features in proto3 (for complexity)
message Proto2Features {
  optional int32 optional_field = 1;
  // The 'required' keyword is not allowed in proto3 but included here for parser testing
  required string required_field = 2;
}

// Introduce syntax errors to test parser robustness
message SyntaxErrors {
  int32 missing_semicolon = 1; // Missing semicolon
  string incorrect_field = 2; // Missing field number
}

// Reserved field numbers and names in service
service ReservedService {
  rpc NewMethod(NewRequest) returns (NewResponse);
}

message NewRequest {
  string request = 1;
}

message NewResponse {
  string response = 1;
}

// Message with multiple levels of nesting
message DeeplyNestedMessage {
  message Level1 {
    message Level2 {
      message Level3 {
        message Level4 {
          string deep_field = 1;
        }
      }
    }
  }
}

// Extension of message options
extend google.protobuf.MessageOptions {
  bool custom_option = 51234;
}

message OptionExtendedMessage {
  option (custom_option) = true;
  string field = 1;
}

// Use of "reserved" in enums
enum ReservedEnum {
  reserved 2, 5 to 7;
  VALUE_ONE = 0;
  VALUE_EIGHT = 8;
}

// Message with field options
message FieldOptionsMessage {
  string field = 1 [(validation) = "must be non-empty"];
}

message InvalidSyntaxMessage {
  int32 field = 1;
}
